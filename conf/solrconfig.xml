<?xml version="1.0" encoding="UTF-8" ?>
<config>
  <abortOnConfigurationError>${solr.abortOnConfigurationError:true}</abortOnConfigurationError>
	<lib dir="/usr/share/solr/lib" />
  
  <!-- Make sure this directory is the big/fast one! -->
  <dataDir>/var/lib/solr/data</dataDir>

  <indexDefaults>
    <useCompoundFile>false</useCompoundFile>
    <mergeFactor>10</mergeFactor>
    <ramBufferSizeMB>64</ramBufferSizeMB>
    
    <!-- Some defaults -->
    <maxFieldLength>10000</maxFieldLength>
    <writeLockTimeout>1000</writeLockTimeout>
    <commitLockTimeout>10000</commitLockTimeout>
    
	  <!-- Will default to old 'simple' option if not set -->
    <lockType>native</lockType>
  </indexDefaults>

  <!-- Inherits from indexdefaults -->
  <mainIndex>
    <useCompoundFile>false</useCompoundFile>
    <ramBufferSizeMB>64</ramBufferSizeMB>
    <mergeFactor>10</mergeFactor>

    <unlockOnStartup>false</unlockOnStartup>
    
    <reopenReaders>true</reopenReaders>
    
    <deletionPolicy class="solr.SolrDeletionPolicy">
      <!-- The number of commit points to be kept -->
      <str name="maxCommitsToKeep">1</str>
      <!-- The number of optimized commit points to be kept -->
      <str name="maxOptimizedCommitsToKeep">0</str>
    </deletionPolicy>

    <!-- Debugging setting - see what this looks like when on -->
     <infoStream file="INFOSTREAM.txt">false</infoStream> 

  </mainIndex>

  <!-- JMX for monitoring -->
  <jmx />

  <!-- the default high-performance update handler -->
  <updateHandler class="solr.DirectUpdateHandler2">
  </updateHandler>
  
  <query>
    <maxBooleanClauses>1024</maxBooleanClauses>

    <!-- Fast filter caching --> 
    <filterCache
      class="solr.FastLRUCache"
      size="512"
      initialSize="512"
      autowarmCount="0"/>

      <fieldValueCache
        class="solr.FastLRUCache"
        size="512"
        autowarmCount="128"
        showItems="32"
      />

   <!-- Query cache  -->
    <queryResultCache
      class="solr.LRUCache"
      size="512"
      initialSize="512"
      autowarmCount="0"/>

    <!-- Stored doc cache -->
    <documentCache
      class="solr.LRUCache"
      size="512"
      initialSize="512"
      autowarmCount="0"/>

    <!-- Enable lazy loading, handy for big compressed ones -->
    <enableLazyFieldLoading>true</enableLazyFieldLoading>

   <!-- Get extra results when querying  -->
    <queryResultWindowSize>20</queryResultWindowSize>

    <!-- Maximum number of documents to cache for any entry in the queryResultCache. -->
    <queryResultMaxDocsCached>200</queryResultMaxDocsCached>


    <!-- We can use a new search to pre-warm caches -->
    <listener event="newSearcher" class="solr.QuerySenderListener">
       <arr name="queries">
         <lst><str name="q">fooweb faq</str></lst>
       </arr>
    </listener>

    <!-- First Searcher warms on startup -->
    <listener event="firstSearcher" class="solr.QuerySenderListener">
      <arr name="queries">
        <lst><str name="q">fooweb faq</str></lst>
      </arr>
    </listener>

    <!-- Use a searcher before caches are warmed? -->
    <useColdSearcher>false</useColdSearcher>

    <!-- Maximum number of searchers that may be warming in the background (1-2 slaves, more masters.) -->
    <maxWarmingSearchers>5</maxWarmingSearchers>

  </query>

  <!-- 
    Let the dispatch filter handler /select?qt=XXX
    -->
  <requestDispatcher handleSelect="true" >
    <!--Make sure your system has some authentication before enabling remote streaming!  -->
    <requestParsers enableRemoteStreaming="true" multipartUploadLimitInKB="2048000" />

    <!-- Set HTTP caching related parameters (for proxy caches and clients). -->
    <httpCaching lastModifiedFrom="openTime" etagSeed="1.0">
       <!-- <cacheControl>max-age=30, public</cacheControl> -->
    </httpCaching>
  </requestDispatcher>


  <!-- requestHandler plugins -->
  <requestHandler name="standard" class="solr.SearchHandler">
    <!-- default values for query parameters -->
     <lst name="defaults">
       <str name="echoParams">explicit</str>
     </lst>
  </requestHandler>

  <!-- Dismax Handler -->
  <requestHandler name="dismax" class="solr.SearchHandler" default="true">
    <lst name="defaults"> <!-- Can be overridden. Can also have appends or invariants blocks which work as described -->
     <str name="defType">dismax</str>
     <str name="echoParams">explicit</str>
		<!-- How much to figure in other than the max scoring field - 0 means sum, 1 means max field only. 0.1 typical -->
     <float name="tie">0.01</float>
		<!-- Query time boosts and what fields will be searched against -->
     <str name="qf">
        text^0.5 category^1.5 title^2 body^1 permalink^10.0 author^1.8 tag^1.3 phonetic^0.5 text_rev^0.5
     </str>
		<!-- Query time boosting of phrase matches in a field -->
		<str name="pf">
        text^0.2 title^4 author^1.8 body^1 
     </str>
		<str name="bf">
			recip(ms(NOW,date),3.16e-11,1,1)
     </str>
     <str name="bf">
        recip(ms(NOW,date),3.16e-11,1,1)
     </str>
		<!-- Minimum matches --> 
		<str name="mm">
        3&lt;60%
     </str> 
		<!-- Phrase slop -->
		 <int name="ps">10</int>
     <int name="qs">5</int> 
		 <str name="spellcheck.onlyMorePopular">true</str>
     <str name="spellcheck.extendedResults">false</str>
     <str name="spellcheck.count">1</str>
    </lst>
		<arr name="last-components">
			<str>spellcheck</str>
    </arr>
  </requestHandler>

   <!-- The spell check component can return a list of alternative spelling suggestions.  -->
  <searchComponent name="spellcheck" class="solr.SpellCheckComponent">
    <str name="queryAnalyzerFieldType">textSpell</str>
    <lst name="spellchecker">
      <str name="name">default</str>
      <str name="field">spell</str>
      <str name="spellcheckIndexDir">/var/lib/solr/spellchecker</str>
    </lst>
  </searchComponent>

  <searchComponent name="tvComponent" class="org.apache.solr.handler.component.TermVectorComponent"/>
  
  <!-- A component to return terms and document frequency of those terms.
       This component does not yet support distributed search. -->
  <searchComponent name="termsComponent" class="org.apache.solr.handler.component.TermsComponent"/>

  <requestHandler name="/terms" class="org.apache.solr.handler.component.SearchHandler">
     <lst name="defaults">
      <bool name="terms">true</bool>
    </lst>     
    <arr name="components">
      <str>termsComponent</str>
    </arr>
  </requestHandler>
  
  <requestHandler name="mlt" class="solr.MoreLikeThisHandler">
   <lst name="defaults">
     <str name="defType">mlt</str>
     <str name="mlt">true</str>
     <str name="mlt.fl">body title</str>
     <str name="mlt.match.include">false</str>
   </lst>
  </requestHandler>


  <!-- a search component that enables you to configure the top results for
       a given query regardless of the normal lucene scoring.-->
  <searchComponent name="elevator" class="solr.QueryElevationComponent" >
    <!-- pick a fieldType to analyze queries -->
    <str name="queryFieldType">string</str>
    <str name="config-file">elevate.xml</str>
  </searchComponent>

  <!-- a request handler utilizing the elevator component -->
  <requestHandler name="/elevate" class="solr.SearchHandler" startup="lazy">
    <lst name="defaults">
      <str name="echoParams">explicit</str>
    </lst>
    <arr name="last-components">
      <str>elevator</str>
    </arr>
  </requestHandler>

  <!-- Update request handler. -->
  <requestHandler name="/update" class="solr.XmlUpdateRequestHandler" />
  <requestHandler name="/update/javabin" class="solr.BinaryUpdateRequestHandler" />

  <!-- Analysis, for debugging -->
  <requestHandler name="/analysis/document" class="solr.DocumentAnalysisRequestHandler" />
  <requestHandler name="/analysis/field" class="solr.FieldAnalysisRequestHandler" />

  <!--Admin Handlers -->
  <requestHandler name="/admin/" class="org.apache.solr.handler.admin.AdminHandlers" />

  <!-- ping/healthcheck -->
  <requestHandler name="/admin/ping" class="PingRequestHandler">
    <lst name="defaults">
      <str name="qt">standard</str>
      <str name="q">solrpingquery</str>
      <str name="echoParams">all</str>
    </lst>
  </requestHandler>

  <!-- Echo the request contents back to the client -->
  <requestHandler name="/debug/dump" class="solr.DumpRequestHandler" >
    <lst name="defaults">
     <str name="echoParams">explicit</str> <!-- for all params (including the default etc) use: 'all' -->
     <str name="echoHandler">true</str>
    </lst>
  </requestHandler>
  
  <requestHandler name="/dataimport" class="org.apache.solr.handler.dataimport.DataImportHandler">
    <lst name="defaults">
      <str name="config">cms-data-config.xml</str>
    </lst>
  </requestHandler>

  <highlighting>
   <!-- A regular-expression-based fragmenter (f.i., for sentence extraction) -->
   <fragmenter name="regex" class="org.apache.solr.highlight.RegexFragmenter">
    <lst name="defaults">
      <!-- slightly smaller fragsizes work better because of slop -->
      <int name="hl.fragsize">70</int>
      <!-- allow 50% slop on fragment sizes -->
      <float name="hl.regex.slop">0.5</float>
      <!-- a basic sentence pattern -->
      <str name="hl.regex.pattern">[-\w ,/\n\"']{20,200}</str>
    </lst>
   </fragmenter>

   <!-- Configure the standard formatter -->
   <formatter name="html" class="org.apache.solr.highlight.HtmlFormatter" default="true">
    <lst name="defaults">
     <str name="hl.simple.pre"><![CDATA[<em>]]></str>
     <str name="hl.simple.post"><![CDATA[</em>]]></str>
    </lst>
   </formatter>
  </highlighting>

	<requestHandler name="/update/extract" class="org.apache.solr.handler.extraction.ExtractingRequestHandler">
		<lst name="defaults">
			<str name="uprefix">ignored_</str>
		</lst>
	</requestHandler>

  <!-- config for the admin interface -->
  <admin>
    <defaultQuery>solr</defaultQuery>
    <healthcheck type="file">server-enabled</healthcheck>
  </admin>
</config>
